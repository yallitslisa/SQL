-- In this project, you’re going to make your own table with some small set of “famous people”, then make more tables about things they do and join those to create nice human readable lists.

-- For example, here are types of famous people and the questions your data could answer:

-- Movie stars: What movies are they in? Are they married to each other?
-- Singers: What songs did they write? Where are they from?
-- Authors: What books did they write?
-- Fictional characters: How are they related to other characters? What books do they show up in?

/* Rating comes from 2023 stats from www.rottentomatoes.com */

CREATE TABLE famous_people (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT);
CREATE TABLE movies (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, rating INTEGER, famous_person INTEGER);
CREATE TABLE famous_spouses (id INTEGER PRIMARY KEY AUTOINCREMENT, spouse1 INTEGER, spouse2 INTEGER);
CREATE TABLE books (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, author TEXT, year_released INTEGER);

INSERT INTO famous_people (name) VALUES ("Will Smith");
INSERT INTO famous_people (name) VALUES ("Jada Pinkett-Smith");
INSERT INTO famous_people (name) VALUES ("Blake Lively");
INSERT INTO famous_people (name) VALUES ("Ryan Reynolds");
INSERT INTO famous_people (name) VALUES ("Jennifer Lopez");
INSERT INTO famous_people (name) VALUES ("Ben Affleck");
INSERT INTO famous_people (name) VALUES ("Daniel Radcliffe");
INSERT INTO famous_people (name) VALUES ("Emma Watson");
INSERT INTO famous_people (name) VALUES ("Rupert Grint");
INSERT INTO famous_people (name) VALUES ("Georgia Groome");
-- Creating a table with just the names of various famous people

INSERT INTO movies (title, rating, famous_person) VALUES ("I Am Legend", 0.68, 1);
INSERT INTO movies (title, rating, famous_person) VALUES ("Hancock", 0.41, 1);
INSERT INTO movies (title, rating, famous_person) VALUES ("Hitch", 0.69, 1);
INSERT INTO movies (title, rating, famous_person) VALUES ("Ali", 0.68, 1);
INSERT INTO movies (title, rating, famous_person) VALUES ("Suicide Squad", 0.26, 1);
INSERT INTO movies (title, rating, famous_person) VALUES ("Ali", 0.68, 2);
INSERT INTO movies (title, rating, famous_person) VALUES ("Madagasgar", 0.55, 2);
INSERT INTO movies (title, rating, famous_person) VALUES ("Bad Moms", 0.58, 2);
INSERT INTO movies (title, rating, famous_person) VALUES ("The Age of Adeline", 0.55, 3);
INSERT INTO movies (title, rating, famous_person) VALUES ("The Shallows", 0.78, 3);
INSERT INTO movies (title, rating, famous_person) VALUES ("Green Lantern", 0.26, 3);
INSERT INTO movies (title, rating, famous_person) VALUES ("Green Lantern", 0.26, 4);
INSERT INTO movies (title, rating, famous_person) VALUES ("Deadpool", 0.85, 4);
INSERT INTO movies (title, rating, famous_person) VALUES ("Deadpool 2", 0.84, 4);
INSERT INTO movies (title, rating, famous_person) VALUES ("Smokin' Aces", 0.30, 4);
INSERT INTO movies (title, rating, famous_person) VALUES ("Hustlers", 0.87, 5);
INSERT INTO movies (title, rating, famous_person) VALUES ("Monster-in-Law", 0.18, 5);
INSERT INTO movies (title, rating, famous_person) VALUES ("Smokin' Aces", 0.30, 5);
INSERT INTO movies (title, rating, famous_person) VALUES ("Gigli", 0.06, 5);
INSERT INTO movies (title, rating, famous_person) VALUES ("Gigli", 0.06, 6);
INSERT INTO movies (title, rating, famous_person) VALUES ("Suicide Squad", 0.26, 6);
INSERT INTO movies (title, rating, famous_person) VALUES ("Good Will Hunting", 0.97, 6);
INSERT INTO movies (title, rating, famous_person) VALUES ("Argo", 0.96, 6);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Sorcerer's Stone", 0.81, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Chamber of Secrets", 0.82, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Prisoner of Azkaban", 0.90, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Goblet of Fire", 0.88, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Order of the Phoenix", 0.78, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Half-Blood Prince", 0.84, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Deathly Hallows - Part 1", 0.77, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Deathly Hallows - Part 2", 0.96, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Sorcerer's Stone", 0.81, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Chamber of Secrets", 0.82, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Prisoner of Azkaban", 0.90, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Goblet of Fire", 0.88, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Order of the Phoenix", 0.78, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Half-Blood Prince", 0.84, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Deathly Hallows - Part 1", 0.77, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Deathly Hallows - Part 2", 0.96, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Sorcerer's Stone", 0.81, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Chamber of Secrets", 0.82, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Prisoner of Azkaban", 0.90, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Goblet of Fire", 0.88, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Order of the Phoenix", 0.78, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Half-Blood Prince", 0.84, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Deathly Hallows - Part 1", 0.77, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Harry Potter and the Deathly Hallows - Part 2", 0.96, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Jungle", 0.61, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("The Lost City", 0.79, 7);
INSERT INTO movies (title, rating, famous_person) VALUES ("Beauty and the Beast", 0.71, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("The Perks of Being a Wallflower", 0.85, 8);
INSERT INTO movies (title, rating, famous_person) VALUES ("Knock at the Cabin", 0.67, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Into the White", 0.45, 9);
INSERT INTO movies (title, rating, famous_person) VALUES ("Angus, Thongs and Perfect Snogging", 0.73, 10);
INSERT INTO movies (title, rating, famous_person) VALUES ("Double Date", 0.83, 10);
INSERT INTO movies (title, rating, famous_person) VALUES ("London to Brighton", 0.67, 10);


INSERT INTO famous_spouses (spouse1, spouse2) VALUES ("1", "2");
INSERT INTO famous_spouses (spouse1, spouse2) VALUES ("4", "3");
INSERT INTO famous_spouses (spouse1, spouse2) VALUES ("6", "5");
INSERT INTO famous_spouses (spouse1, spouse2) VALUES ("9", "10");

INSERT INTO books (name, author, year_released) VALUES ("Will", "1", 2021);
INSERT INTO books (name, author, year_released) VALUES ("Girls Hold Up This World", "2", 2004);
INSERT INTO books (name, author, year_released) VALUES ("True Love", "5", 2014);
INSERT INTO books (name, author, year_released) VALUES ("Con Polo", "5", 2022);
INSERT INTO books (name, author, year_released) VALUES ("Good Will Hunting - A Screenplay", "6", 1998);



-- Matching spouses.
SELECT a.name AS Husband, b.name AS Wife 
FROM famous_spouses 
JOIN famous_people a 
ON spouse1 = a.id 
JOIN famous_people b 
ON spouse2 = b.id;


-- Matching books to their famous_person author, ordered by latest release year.
SELECT books.name AS Book, books.year_released AS Published, famous_people.name AS Author 
FROM books 
JOIN famous_people 
ON books.author = famous_people.id 
ORDER BY books.year_released desc;


-- Which movie had the highest and lowest rating? Which person did those ratings belong to?
SELECT movies.title AS Title, ROUND(movies.rating * 100) AS Rating, famous_people.name AS Person 
FROM movies 
JOIN famous_people 
ON movies.famous_person = famous_people.id 
ORDER BY Rating desc;

-- Matching Actors/Actresses with movies that they have been in. Need to come back and figure out how to have only one name on left side and multiple movie titles on right side.
SELECT famous_people.name AS Person, movies.title AS Movie
FROM famous_people 
LEFT JOIN movies 
ON famous_people.id = movies.famous_person;
