#This project utilizes the following Superstore data:

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);


#Using SELECT, SUM, AVERAGE, MIN, MAX, GROUP BY, ORDER BY,and WHERE statements to answer self-identified questions.


SELECT SUM(price), item_name
FROM superstore
GROUP BY item_name;
#finding sum of all the prices with item name attached, grouped by item name.

SELECT SUM(average_rating), item_name
FROM superstore
GROUP BY item_name;
#finding sum of average rating with item name attached, grouped by item name.

SELECT AVG(stock_quantity), item_name, price
FROM superstore
GROUP BY item_name;
#avg counts values in a column; counted how many items were in stock next to item name and price of item, grouped by item name.

SELECT MIN(stock_quantity), item_name, price
FROM superstore
GROUP BY item_name
ORDER BY stock_quantity asc;
#finding minimum value of stock quantity displaying item name and price, ordered by ascending stock quantity.

SELECT MAX(price), item_name, average_rating, category
FROM superstore
GROUP BY item_name
ORDER BY price desc;
#finding maximum priced item, displaying item name, avg rating, and item category in descending price order.

SELECT COUNT(item_name), category
FROM superstore
GROUP BY category;
#counted how many items were in each category.

SELECT MAX(price), item_name, stock_quantity, average_rating
FROM superstore
WHERE category = "Kitchen Supplies"
GROUP BY item_name
ORDER BY average_rating desc;
#shows max price, item name, stock quantity, and avg rating of items in Kitchen Supplies category, desc order by avg rating. 

SELECT SUM(stock_quantity), item_name, price, average_rating, category
FROM superstore
WHERE item_name = "Air Purifier";
#finding out how many air purifiers are in stock + relevant information related to the item.
