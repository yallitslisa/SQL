#This project utilizes a fake Fortune 500 dataset in order to select data in different ways.
#Utilizing CASE, HAVING, WHERE, logical operators such as AND and OR, aggregate functions such as AVG, SUM, COUNT, MAX/MIN, and ROUND in order to filter data and return summary statistics.

CREATE TABLE fortune_companies (
    company_id INTEGER PRIMARY KEY,
    company_name TEXT,
    industry TEXT,
    revenue REAL,
    employees INTEGER,
    healthcare_benefits BIT,
    paid_time_off_days INTEGER,
    maternity_leave_weeks INTEGER,
    avg_employee_tenure REAL
);

INSERT INTO fortune_companies (company_name, industry, revenue, employees, healthcare_benefits, paid_time_off_days, maternity_leave_weeks, avg_employee_tenure)
VALUES
    ('Apple Inc.', 'Technology', 365.7, 147000, 1, 20, 12, 4.5),
    ('Walmart Inc.', 'Retail', 523.96, 2200000, 1, 15, 8, 6.2),
    ('Exxon Mobil Corporation', 'Energy', 265.01, 72000, 0, 18, 6, 7.8),
    ('Amazon.com Inc.', 'Technology', 386.06, 1370000, 1, 22, 14, 5.1),
    ('JPMorgan Chase & Co.', 'Financials', 160.1, 255998, 1, 21, 12, 6.9),
    ('Verizon Communications Inc.', 'Telecommunications', 131.88, 132600, 0, 15, 6, 5.5),
    ('Company A', 'Retail', 235.4, 2000, 1, 18, 10, 5.8),
    ('Company B', 'Healthcare', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company C', 'Manufacturing', 300.2, 2000, 1, 18, 10, 5.8),
    ('Company D', 'Healthcare', 150.5, 3500, 1, 20, 12, 6.5),
    ('Company E', 'Finance', 280.7, 1800, 0, 14, 8, 4.2),
    ('Company F', 'Technology', 420.1, 2500, 1, 22, 14, 7.1),
    ('Company G', 'Retail', 190.8, 1500, 1, 16, 9, 5.3),
    ('Company H', 'Energy', 280.5, 2200, 0, 15, 8, 6.8),
    ('Company I', 'Telecommunications', 110.3, 1800, 1, 19, 11, 4.9),
    ('Company J', 'Manufacturing', 390.6, 2700, 1, 21, 13, 6.2),
    ('Company K', 'Healthcare', 180.2, 3200, 1, 17, 9, 7.4),
    ('Company L', 'Finance', 230.4, 1900, 0, 13, 7, 5.6),
    ('Company M', 'Technology', 340.9, 2800, 1, 23, 15, 6.9),
    ('Company N', 'Retail', 200.6, 1600, 1, 15, 8, 4.7),
    ('Company O', 'Energy', 260.2, 2400, 0, 14, 7, 6.1),
    ('Company P', 'Telecommunications', 130.5, 2100, 1, 20, 12, 5.3),
    ('Company Q', 'Manufacturing', 360.0, 2900, 1, 22, 14, 7.8),
    ('Company R', 'Technology', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company S', 'Retail', 210.8, 1600, 0, 16, 9, 4.9),
    ('Company T', 'Energy', 290.5, 2200, 1, 15, 8, 7.2),
    ('Company U', 'Telecommunications', 140.3, 1900, 1, 20, 12, 6.1),
    ('Company V', 'Manufacturing', 350.6, 2800, 1, 22, 14, 5.4),
    ('Company W', 'Healthcare', 160.2, 3300, 0, 18, 10, 4.8),
    ('Company X', 'Finance', 240.4, 2000, 1, 13, 7, 7.1),
    ('Company Y', 'Technology', 320.9, 2700, 1, 23, 15, 5.6),
    ('Company Z', 'Retail', 180.6, 1400, 0, 14, 8, 6.3),
    ('Company AA', 'Energy', 240.2, 2600, 1, 17, 9, 6.5),
    ('Company BB', 'Telecommunications', 120.5, 2100, 0, 19, 11, 4.5),
    ('Company CC', 'Manufacturing', 380.0, 3000, 1, 21, 13, 7.3),
    ('Company DD', 'Healthcare', 170.2, 3200, 1, 17, 9, 5.8),
    ('Company EE', 'Finance', 250.4, 1900, 0, 12, 6, 6.4),
    ('Company FF', 'Technology', 300.9, 2500, 1, 24, 16, 6.9),
    ('Company GG', 'Retail', 190.6, 1700, 0, 13, 7, 5.2),
    ('Company HH', 'Energy', 280.2, 2300, 1, 16, 9, 6.8),
    ('Company II', 'Telecommunications', 110.5, 2000, 1, 21, 12, 4.9),
    ('Company JJ', 'Manufacturing', 370.0, 3100, 1, 20, 12, 7.6),
    ('Company KK', 'Healthcare', 150.2, 3400, 0, 16, 8, 5.3);

# Analysis:

# CASE: which companies have healthcare and which do not, showing companies that provide healthcare first
SELECT company_name, industry,
CASE WHEN healthcare_benefits=1 THEN "yes"
WHEN healthcare_benefits=0 THEN "no"
ELSE "N/A"
END AS healthcare_provided
FROM fortune_companies
ORDER BY healthcare_provided desc;

#CASE & WHERE: rank each company according to their "birth-friendliness", based on the amount of maternity leave offered, in the Technology, Energy, Healthcare, and Finance industries
SELECT company_name, industry, maternity_leave_weeks,
CASE WHEN maternity_leave_weeks>=10 THEN "take your baby on vacation"
WHEN maternity_leave_weeks>=8 THEN "acceptable at best"
ELSE "might as well bring your baby to work"
END AS birth_friendliness
FROM fortune_companies
WHERE industry IN("Technology", "Energy", "Healthcare", "Finance")
ORDER BY industry desc;

# CASE & NOT IN: which companies offer healthcare and have high tenure
SELECT company_name, avg_employee_tenure AS avg_tenure
, CASE WHEN healthcare_benefits=1 THEN "yes"
WHEN healthcare_benefits=0 THEN "no"
ELSE "N/A"
END AS healthcare_provided
, CASE WHEN avg_employee_tenure>=7.0 THEN "really high"
WHEN avg_employee_tenure>=5.5 THEN "high"
ELSE "not high enough"
END AS tenure_rating
FROM fortune_companies
WHERE tenure_rating NOT IN ("not high enough")
ORDER BY avg_tenure desc;

#HAVING: all industries plus the total number of employees for each company, only for companies that have at least 100,000 employees.
SELECT industry, SUM(employees) AS total_employees_over_100k
FROM fortune_companies
GROUP BY industry
HAVING SUM(employees) >= 100000
ORDER BY total_employees_over_100k desc;

#AND & CASE: which company has healthcare and the highest tenure
SELECT company_name, avg_employee_tenure
, CASE WHEN healthcare_benefits=1 THEN "yes"
WHEN healthcare_benefits=0 THEN "no"
ELSE "N/A"
END AS healthcare_provided
FROM fortune_companies
WHERE healthcare_benefits=1
AND avg_employee_tenure>=6.0
ORDER BY avg_employee_tenure desc;

#OR: which companies are in technology or healthcare
SELECT company_name, industry
FROM fortune_companies
WHERE industry="Technology"
OR industry="Healthcare"
ORDER BY industry;

#AVG & ROUND: what is the average revenue in each industry
SELECT industry AS industry_name, ROUND(AVG(revenue),1) AS avg_industry_revenue
FROM fortune_companies
GROUP BY industry
ORDER BY avg_industry_revenue desc;

#SUM: how many employees does each industry collectively employ
SELECT industry, SUM(employees) AS total_industry_employees
FROM fortune_companies
GROUP BY industry
ORDER BY total_industry_employees desc;

#COUNT: how many companies are in each industry
SELECT industry, COUNT(company_name) AS "number of companies"
FROM fortune_companies
GROUP BY industry
ORDER BY "number of companies" desc;

#MIN: which company has the least amount of PTO
SELECT company_name, industry, MIN(paid_time_off_days) AS pto
FROM fortune_companies
ORDER BY pto asc;

#MAX: which company has the highest maternity leave
SELECT company_name, MAX(avg_employee_tenure)
FROM fortune_companies
ORDER BY avg_employee_tenure desc;
